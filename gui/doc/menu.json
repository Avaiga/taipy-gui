{
  "default": "lov",
  "inherits": [
    "active"
  ],
  "properties": [
    {
      "name": "lov",
      "type": "dynamic(str|List[str|Icon|any])",
      "default": null,
      "doc": "The list of menu option values."
    },
    {
      "name": "adapter",
      "type": "Function",
      "default": "`\"lambda x: str(x)\"`",
      "doc": "The function that transforms an element of <i>lov</i> into a <i>tuple(id:str, label:str|Icon)</i>."
    },
    {
      "name": "type",
      "type": "str",
      "default": "<i>Type of the first lov element</i>",
      "doc": "Must be specified if <i>lov</i> contains a non specific type of data (ex: dict).\r\n<i>value</i> must be of that type, <i>lov</i> must be an iterable on this type, and the adapter function will receive an object of this type."
    },
    {
      "name": "label",
      "type": "str",
      "default": null,
      "doc": "The title of the menu."
    },
    {
      "name": "width",
      "type": "str",
      "default": "\"15vw\"",
      "doc": "The width, in CSS units, of the menu when unfolded.\r\nNote that when running on a mobile device, the property <i>width[active]</i> is used instead."
    },
    {
      "name": "width[mobile]",
      "type": "str",
      "default": "\"85vw\"",
      "doc": "The width, in CSS units, of the menu when unfolded, on a mobile device."
    },
    {
      "name": "on_action",
      "type": "Callback",
      "default": null,
      "doc": "The name of the function that will be triggered when a menu option is selected.<br/>\r\nAll the parameters of that function are optional:\r\n<ul>\r\n<li>state (<code>State^</code>): the state instance.</li>\r\n<li>id (str): the identifier of the button.</li>\r\n<li>action (str): the name of the action that provoked the change.</li>\r\n<li>payload (dict): the details on this callback's invocation.<br/>\r\nThis dictionary has the following keys:\r\n<ul>\r\n<li>args: List where the first element contains the id of the selected option.</li>\r\n</ul>\r\n</li>\r\n</ul>"
    }
  ]
}