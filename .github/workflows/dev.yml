# This is a basic workflow to help you get started with Actions

name: dev workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master,main,release ]
  pull_request:
    branches: [ master,main,release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   #This workflow contains two jobs called "test" and "test-gui"
  test:
    # The type of runner that the job will run on
    strategy:
      matrix:
        python-versions: [3.9]
        os: [ubuntu-18.04, windows-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
          pip install pytest pytest-cov tox tox-gh-actions

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev --python 3.9
      - id: code-quality
        if: matrix.os == 'ubuntu-latest'
        uses: ricardochaves/python-lint@v1.4.0
        with:
            python-root-list: "taipy tests"
            use-pylint: false
            use-isort: false
            extra-pycodestyle-options: "--max-line-length=120 --ignore=E203,E266,E501,E722,W503,F403,F401"
            extra-mypy-options: "--ignore-missing-imports"
      - name: test with tox
        run: |
          tox

      - name: Install and test with optional dependancy
        run: |
          pip install celery[RabbitMQ]==5.1.2
          tox

      - name: list files
        run: ls -l .

  test-gui:

    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-18.04, windows-latest]

    defaults:
      run:
        working-directory: ./gui

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: npm build and test ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - run: npm test

  code-coverage:
      runs-on: ubuntu-18.04
      steps:
          -   uses: actions/checkout@v2
          -   name: Set up Python 3.9
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

          -   name: Install pipenv
              run: |
                  python -m pip install --upgrade pipenv wheel
                  pip install pytest pytest-cov

          -   id: cache-pipenv
              uses: actions/cache@v1
              with:
                  path: ~/.local/share/virtualenvs
                  key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

          -   name: Install dependencies
              run: |
                   pipenv lock
                   pipenv install --system --dev --python 3.9

          -   name: Build coverage file
              run: |
                  pytest -s --cov=taipy --cov-append --cov-report=xml --cov-report term-missing tests

          -   name: Code coverage
              uses: orgoro/coverage@v2
              with:
                  coverageFile: coverage.xml
                  token: ${{ secrets.GITHUB_TOKEN }}
                  thresholdAll: 0.85
