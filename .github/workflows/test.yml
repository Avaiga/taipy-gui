name: Tests & Coverage

on:
  workflow_dispatch:  
#  push:
#    branches: [ develop ]
#  pull_request:
#    branches: [ develop ]

jobs:
  backend:
    timeout-minutes: 20
    strategy:
      matrix:
        node-version: [16.x]
        python-versions: ["3.8", "3.9", "3.10"]
        os: [ubuntu-18.04, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: npm build and test ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: ./gui
        run: npm ci
      - name: Run npm build
        run: npm run build --if-present
        working-directory: ./gui

      - name: test with tox
        env:
          TOX_PARALLEL_NO_SPINNER: 1
        run: |
          pip install tox
          tox -p all

      - name: Code coverage
        if: matrix.os == 'ubuntu-18.04' && github.event_name == 'pull_request' && matrix.python-versions == '3.9'
        uses: orgoro/coverage@v2
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: 0.85

  gui:
    timeout-minutes: 20
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-18.04, windows-latest]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./gui

    steps:
      - uses: actions/checkout@v2
      - name: npm build and test ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - run: npm test

      - name: Code coverage
        if: matrix.os == 'ubuntu-18.04' && github.event_name == 'pull_request'
        uses: artiomtr/jest-coverage-report-action@v2.0-rc.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          threshold: "80"
          working-directory: "gui"
          skip-step: "install"
