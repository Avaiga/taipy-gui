name: 'code-coverage'
on:
    pull_request:
        branches: [ master,main,release ]

    workflow_dispatch:
jobs:
    backend-code-coverage:
        runs-on: ubuntu-18.04
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python 3.9
                uses: actions/setup-python@v2
                with:
                    python-version: 3.9

            -   name: Install pipenv
                run: |
                    python -m pip install --upgrade pipenv wheel
                    pip install pytest pytest-cov

            -   id: cache-pipenv
                uses: actions/cache@v1
                with:
                    path: ~/.local/share/virtualenvs
                    key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

            -   name: Install dependencies
                run: |
                    pipenv lock
                    pipenv install --system --dev --python 3.9

            -   name: Build coverage file
                run: |
                    pytest -s --cov=taipy --cov-append --cov-report=xml --cov-report term-missing tests

            -   name: Code coverage
                uses: orgoro/coverage@v2
                with:
                    coverageFile: coverage.xml
                    token: ${{ secrets.GITHUB_TOKEN }}
                    thresholdAll: 0.85

    frontend-code-coverage:
        strategy:
            matrix:
                node-version: [ 16.x ]
                os: [ ubuntu-18.04 ]
        defaults:
            run:
                working-directory: ./gui
        runs-on: ${{ matrix.os }}

        steps:
            -   uses: actions/checkout@v2
            -   name: npm build and test ${{ matrix.node-version }} on ${{ matrix.os }}
                uses: actions/setup-node@v2
                with:
                   node-version: ${{ matrix.node-version }}

            -   name: Install dependencies
                run: npm ci

            -   name: Code coverage
                uses: artiomtr/jest-coverage-report-action@v2.0-rc.6
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    threshold: "80"
                    working-directory: "gui"
                    skip-step: "install"
