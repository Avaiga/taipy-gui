# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish package

on:
  workflow_dispatch:

jobs:
  test-package:
    timeout-minutes: 20
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup node version
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build and test the package
        run: |
          python setup.py build_py && python -m build
          rm -rf taipy
          pip install dist/*.tar.gz
          pip install pytest pytest-mock pytest-playwright
          playwright install chromium
          pytest


  publish-to-pypi:
    timeout-minutes: 20
    needs: [test-package]
    environment: production
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup node version
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python setup.py build_py && python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}


  test-published-package:
    timeout-minutes: 30
    needs: [publish-to-pypi]
    strategy:
      matrix:
        python-versions: ['3.8','3.9','3.10']
        os: [ubuntu-18.04,windows-latest,macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Remove taipy folder on unix
        if: matrix.os != 'windows-latest'
        run: |
          rm -rf taipy

      - name: Remove taipy folder on windows
        if: matrix.os == 'windows-latest'
        run: |
          rmdir -Recurse -Force taipy

      - name: Prepare tests
        run: |
          pip install pytest pytest-mock pytest-playwright
          playwright install chromium

      - name: Install and test package
        run: |
          pip install ${{ github.event.repository.name }}
          pytest
