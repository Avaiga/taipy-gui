name: Publish on Pypi

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The Pypi package version to create (ex: 1.0.0)"
        required: true

jobs:
  test-package:
    timeout-minutes: 20
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup node version
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Ensure package version is properly set
        run: |
          echo 'version="${{ github.event.inputs.version }}"' | grep -f - setup.py

      - name: Validate branch name
        run: |
          echo """
          import re, sys
          setup = open('setup.py').read()
          x = re.search(r'version=\"(\d+)\.(\d+)\.(\d+)(?:\.([a-zA-Z0-9_]+))?\"', setup)
          if not x:
              raise ValueError('Invalid version expression')
          if f'release/{x.group(1)}.{x.group(2)}' != sys.argv[1]:
              raise ValueError('Branch name mismatch')
          """ > /tmp/check.py
          python /tmp/check.py "${{ steps.extract_branch.outputs.branch }}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build and test the package
        run: |
          python setup.py build_py && python -m build
          rm -rf src
          pip install dist/*.tar.gz
          pip install pytest pytest-mock pytest-playwright pytest-timeout testbook
          pip install ipython ipykernel
          ipython kernel install --name "python3" --user
          playwright install chromium
          pytest

  publish-to-pypi:
    needs: [test-package]
    timeout-minutes: 20
    environment: publish
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup node version
        uses: actions/setup-node@v2
        with:
          node-version: '16'


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python setup.py build_py && python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  test-published-package:
    needs: [publish-to-pypi]
    timeout-minutes: 30
    strategy:
      matrix:
        python-versions: ['3.8','3.9','3.10']
        os: [ubuntu-18.04,windows-latest,macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Prepare tests on unix
        if: matrix.os != 'windows-latest'
        run: |
          rm -rf src

      - name: Prepare tests on windows
        if: matrix.os == 'windows-latest'
        run: |
          rmdir -Recurse -Force src

      - name: Prepare tests
        run: |
          pip install --upgrade pip
          pip install pytest pytest-mock pytest-playwright pytest-timeout testbook
          pip install ipython ipykernel
          ipython kernel install --name "python3" --user
          playwright install chromium

      - name: Install and test package
        run: |
          pip install --no-cache-dir ${{ github.event.repository.name }}==${{ github.event.inputs.version }}
          pytest
